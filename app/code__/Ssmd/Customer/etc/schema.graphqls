type Mutation {
    createCustomer (input: CustomerInput!): CustomerOutput @resolver(class: "\\Ssmd\\Customer\\Model\\Resolver\\CreateCustomer") @doc(description:"Create customer account")
}
input CustomerInput {
    order_id: Int @doc(description: "Customer delegated Order Id")
    telephone: String @doc(description: "Customer Telephone Number")
    sms_text_messaging: Boolean @doc(description: "Customer SMS Text Messaging Status")
}

type Customer {
    tokenBaseCards: [TokenBaseCard] @resolver(class: "ParadoxLabs\\TokenBase\\Model\\Api\\GraphQL\\GetCards") @doc(description: "Get the current customer's stored card(s), if any. Takes optional hash for a specific card.")
    default_payment: String @doc(description: "The ID assigned to the payment info")
    telephone: String @doc(description: "Customers Telephone Number")
    sms_text_messaging: Boolean @doc(description: "Customers SMS Text Messaging Request Status")
}

type CustomerAddress {
    ssmd_additionalinfo : SsmdAdditionalInfo @resolver(class: "Ssmd\\Customer\\Model\\Resolver\\CustomerAddress")
}

type SsmdAdditionalInfo {
    last_used: String @doc(description: "The timestamp of an address last used in an order")
    active_subscriptions: Int @doc(description: "The active subscriptions against the address")
}
